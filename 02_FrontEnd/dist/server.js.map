{"version":3,"sources":["webpack://cognitivebot/./src/server/TeamsAppsComponents.ts?6a42","webpack://cognitivebot/./src/server/cognitiveBotTab/CognitiveBotTab.ts?d42d","webpack://cognitivebot/./src/server/server.ts?3175","webpack://cognitivebot/external \"applicationinsights\"?65e5","webpack://cognitivebot/external \"compression\"?f791","webpack://cognitivebot/external \"debug\"?b2c7","webpack://cognitivebot/external \"dotenv\"?e70f","webpack://cognitivebot/external \"express\"?22fe","webpack://cognitivebot/external \"express-msteams-host\"?e438","[]","webpack://cognitivebot/external \"morgan\"?3206","webpack://cognitivebot/external \"path\"?74bb","webpack://cognitivebot/webpack/bootstrap?7f80","webpack://cognitivebot/webpack/startup?9609"],"names":["nonce","CognitiveBotTab","PreventIframe","log","debug","appInsights","setup","process","env","APPINSIGHTS_INSTRUMENTATIONKEY","start","express","Express","port","PORT","use","json","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","set","path","join","__dirname","morgan","compression","static","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","http","createServer","listen","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"ubACa,EAAAA,MAAQ,GAErB,a,+bCHA,cAQA,IAAaC,EAAb,QAAaA,EAAe,GAH3B,EAAAC,cAAc,+BACd,EAAAA,cAAc,gCACd,EAAAA,cAAc,iCACFD,GAAA,EAAAA,mB,cCRb,eACA,SACA,SACA,SACA,QACA,SACA,SACA,SAEME,EAAMC,EAAM,WAElBD,EAAI,sDAGJ,gBAGAE,EAAYC,MAAMC,QAAQC,IAAIC,gCAAgCC,QAG9D,eAGMC,EAAUC,IACVC,EAAON,QAAQC,IAAIK,MAAQN,QAAQC,IAAIM,MAAQ,KAGrDH,EAAQI,IAAIH,EAAQI,KAAK,CACrBC,OAAQ,CAACC,EAAKC,EAAKC,EAAaC,KAC3BH,EAAYI,QAAUF,EAAIG,eAGnCZ,EAAQI,IAAIH,EAAQY,WAAW,CAAEC,UAAU,KAG3Cd,EAAQe,IAAI,QAASC,EAAKC,KAAKC,UAAW,MAG1ClB,EAAQI,IAAIe,EAAO,SAGnBnB,EAAQI,IAAIgB,KAGZpB,EAAQI,IAAI,WAAYH,EAAQoB,OAAOL,EAAKC,KAAKC,UAAW,iBAC5DlB,EAAQI,IAAI,UAAWH,EAAQoB,OAAOL,EAAKC,KAAKC,UAAW,gBAI3DlB,EAAQI,IAAI,EAAAkB,iBAAiBC,IAI7BvB,EAAQI,IAAI,EAAAoB,kBAAkB,CAC1BC,KAAMT,EAAKC,KAAKC,UAAW,QAC3BQ,WAAYH,KAIhBvB,EAAQI,IAAI,IAAKH,EAAQoB,OAAOL,EAAKC,KAAKC,UAAW,QAAS,CAC1DS,MAAO,gBAIX3B,EAAQe,IAAI,OAAQb,GAGpB0B,EAAKC,aAAa7B,GAAS8B,OAAO5B,GAAM,KACpCV,EAAI,qBAAqBU,S,QCpE7B6B,EAAOC,QAAUC,QAAQ,wB,QCAzBF,EAAOC,QAAUC,QAAQ,gB,QCAzBF,EAAOC,QAAUC,QAAQ,U,QCAzBF,EAAOC,QAAUC,QAAQ,W,QCAzBF,EAAOC,QAAUC,QAAQ,Y,OCAzBF,EAAOC,QAAUC,QAAQ,yB,QCAzBF,EAAOC,QAAUC,QAAQ,S,QCAzBF,EAAOC,QAAUC,QAAQ,W,QCAzBF,EAAOC,QAAUC,QAAQ,UCCrBC,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUE,KAAKP,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAGpEJ,EAAOC,QClBfG,CAAoB,M","file":"server.js","sourcesContent":["// Components will be added here\nexport const nonce = {}; // Do not remove!\n// Automatically added for the cognitiveBotTab tab\nexport * from \"./cognitiveBotTab/CognitiveBotTab\";\n","import { PreventIframe } from \"express-msteams-host\";\n\n/**\n * Used as place holder for the decorators\n */\n@PreventIframe(\"/cognitiveBotTab/index.html\")\n@PreventIframe(\"/cognitiveBotTab/config.html\")\n@PreventIframe(\"/cognitiveBotTab/remove.html\")\nexport class CognitiveBotTab {\n}\n","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport * as compression from \"compression\";\nimport * as appInsights from \"applicationinsights\";\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(\"Initializing Microsoft Teams Express hosted App...\");\n\n// Initialize dotenv, to use .env file settings if existing\nrequire(\"dotenv\").config();\n\n// Set up app insights\nappInsights.setup(process.env.APPINSIGHTS_INSTRUMENTATIONKEY).start();\n// The import of components has to be done AFTER the dotenv config\n// eslint-disable-next-line import/first\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n        (req as any).rawBody = buf.toString();\n    }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add compression - uncomment to remove compression\nexpress.use(compression());\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents\n}));\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n    log(`Server running on ${port}`);\n});\n","module.exports = require(\"applicationinsights\");;","module.exports = require(\"compression\");;","module.exports = require(\"debug\");;","module.exports = require(\"dotenv\");;","module.exports = require(\"express\");;","module.exports = require(\"express-msteams-host\");;","module.exports = require(\"http\");;","module.exports = require(\"morgan\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(483);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}